name: CaraML CI Pipeline

on:
  # Automatically run CI on Release and Pre-Release tags and main branch
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
    branches:
      - main
    paths-ignore:
      - "docs/**"

  # Automatically run CI on branches, that have active PR opened
  pull_request:
    branches:
      - main
    paths-ignore:
      - "docs/**"

  # To make it possible to trigger e2e CI workflow for any arbitrary git ref
  workflow_dispatch:

env:
  GO_VERSION: 1.18
  ARTIFACT_RETENTION_DAYS: 7

jobs:

  build-ui:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Node 16.x
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'

      - name: Cache Dependencies
        uses: actions/cache@v2
        with:
          path: ui/node_modules
          key: |
            ${{ runner.os }}-modules-${{ hashFiles('ui/yarn.lock') }}
          restore-keys: ${{ runner.os }}-modules-

      - name: Install
        working-directory: ui
        run: yarn install --network-concurrency 1

      - name: Lint code
        run: make lint-ui

      - name: Build UI
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
        run: make build-ui

      - name: Publish Artifact
        uses: actions/upload-artifact@v2
        with:
          name: mlp-ui-dist
          path: ui/build/
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}

  build-api:
    runs-on: ubuntu-latest
    outputs:
      api-version: ${{ steps.build-image.outputs.api-version }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build Docker image
        id: build-image
        run: |
          set -o pipefail
          make build-api-image | tee output.log
          echo "api-version=$(sed -n 's%version: \(.*\)%\1%p' output.log)" >> $GITHUB_OUTPUT

      - name: Save Docker image
        run: |
          docker image save \
            --output mlp-api.${{ steps.build-image.outputs.api-version }}.tar \
            mlp:${{ steps.build-image.outputs.api-version }}

      - name: Publish Artifact
        uses: actions/upload-artifact@v2
        with:
          name: mlp-api.${{ steps.build-image.outputs.api-version }}.tar
          path: mlp-api.${{ steps.build-image.outputs.api-version }}.tar
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}

  test-api:
    runs-on: ubuntu-latest
    env:
      GOPATH: ${{ github.workspace }}/.go
    services:
      postgres:
        image: postgres:12.4
        env:
          POSTGRES_DB: mlp
          POSTGRES_USER: mlp
          POSTGRES_PASSWORD: mlp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      keto:
        image: oryd/keto:v0.4.5
        env:
          DSN: memory
        ports:
          - 4466:4466
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Dependencies
        uses: actions/cache@v2
        with:
          path: .go/pkg/mod/
          key: |
            gomod-${{ hashFiles('go.mod') }}
          restore-keys: gomod-

      - name: Run Integration Test
        env:
          POSTGRES_HOST: localhost
          POSTGRES_DB: mlp
          POSTGRES_USER: mlp
          POSTGRES_PASSWORD: mlp
          KETO_URL: http://localhost:4466
        run: make it-test-api-ci

      - name: Lint code
        run: |
          make setup
          make lint-api