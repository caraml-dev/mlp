apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "mlp.fullname" .}}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "mlp.name" .}}
    chart: {{ template "mlp.chart" .}}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.mlp.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "mlp.name" .}}
      release: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: {{ template "mlp.name" .}}
        release: {{ .Release.Name }}
    spec:
      initContainers:
      - name: migrations
        image: migrate/migrate:{{ .Values.dbMigrations.image.tag }}
        command: ['/bin/sh', '-c']
        args:
          - |
            /migrate \
            -path /migrations \
            -database postgres://{{ .Values.postgresql.postgresqlUsername }}:$(PG_PASSWORD)@{{ template "postgresql.host" . }}:5432/{{ .Values.postgresql.postgresqlDatabase }}?sslmode=disable \
            up
        env:
          - name: PG_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-postgresql
                key: postgresql-password
        volumeMounts:
          - mountPath: /migrations
            name: db-migrations
      containers:
        - name: api
          image: {{ .Values.mlp.image.registry }}/{{ .Values.mlp.image.repository }}:{{ .Values.mlp.image.tag }}
          imagePullPolicy: {{ .Values.mlp.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.mlp.service.internalPort }}
          livenessProbe:
            httpGet:
              path: {{ .Values.mlp.livenessProbe.path }}
              port: {{ .Values.mlp.service.internalPort }}
              scheme: HTTP
            initialDelaySeconds: {{ default "30" .Values.mlp.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ default "10" .Values.mlp.livenessProbe.periodSeconds }}
            successThreshold: {{ default "1" .Values.mlp.livenessProbe.successThreshold }}
            timeoutSeconds: {{ default "5" .Values.mlp.livenessProbe.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.mlp.readinessProbe.path }}
              port: {{ .Values.mlp.service.internalPort }}
              scheme: HTTP
            initialDelaySeconds: {{ default "30" .Values.mlp.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ default "10" .Values.mlp.readinessProbe.periodSeconds }}
            successThreshold: {{ default "1" .Values.mlp.readinessProbe.successThreshold }}
            timeoutSeconds: {{ default "5" .Values.mlp.readinessProbe.timeoutSeconds }}
          {{- if .Values.mlp.resources }}
          resources: {{- toYaml .Values.mlp.resources | nindent 12 }}
          {{- end }}
{{- if .Values.mlp.args }}
          args:
{{ toYaml .Values.mlp.args | indent 10 -}}
{{ end }}
{{- if .Values.mlp.command }}
          command:
{{ toYaml .Values.mlp.command | indent 10 -}}
{{ end }}
          env:
            - name: ENVIRONMENT
              value: "{{ .Values.mlp.environment }}"
            - name: API_HOST
              value: "{{ .Values.mlp.apiHost }}"
            - name: PORT
              value: "{{ .Values.mlp.service.internalPort }}"
            - name: DATABASE_HOST
              value: {{ template "postgresql.host" . }}
            - name: DATABASE_USER
              value: "{{ .Values.postgresql.postgresqlUsername }}"
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql
                  key: postgresql-password
            - name: DATABASE_NAME
              value: "{{ .Values.postgresql.postgresqlDatabase }}"
            - name: GITLAB_ENABLED
              value: "{{ .Values.gitlab.enabled }}"
            {{- if .Values.gitlab.enabled }}
            - name: GITLAB_HOST
              value: "{{ .Values.gitlab.host }}"
            - name: GITLAB_REDIRECT_URL
              value: "{{ .Values.mlp.gitlabRedirectUrl }}"
            - name: GITLAB_OAUTH_SCOPES
              value: "{{ .Values.gitlab.oauthScopes }}"
            - name: GITLAB_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-gitlab
                  key: clientId
            - name: GITLAB_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-gitlab
                  key: clientSecret
            {{- end }}
            - name: MLFLOW_TRACKING_URL
              value: "{{ .Values.mlp.mlflowTrackingUrl }}"
            - name: ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-encryption-key"
                  key: encryption-key
            - name: AUTHORIZATION_ENABLED
              value: "{{ .Values.mlp.authorization.enabled }}"
            {{- if .Values.mlp.authorization.enabled }}
            - name: AUTHORIZATION_SERVER_URL
              value: "{{ .Values.mlp.authorization.serverUrl }}"
            {{- end }}
            - name: OAUTH_CLIENT_ID
              value: "{{ .Values.mlp.oauthClientID }}"
            - name: SENTRY_DSN
              value: "{{ .Values.mlp.sentryDSN }}"
            - name: TEAM_LIST
              value: "{{ join "," .Values.mlp.teams }}"
            - name: STREAM_LIST
              value: "{{ join "," .Values.mlp.streams }}"
            {{- if .Values.mlp.docs }}
            - name: DOC_LIST
              value: {{ .Values.mlp.docs | toJson | quote  }}
            {{- end }}
            - name: REACT_APP_FEAST_CORE_API
              value: "{{ .Values.mlp.ui.feastCoreApi }}"
            - name: REACT_APP_MERLIN_API
              value: "{{ .Values.mlp.ui.merlinApi }}"
            - name: REACT_APP_TURING_API
              value: "{{ .Values.mlp.ui.turingApi }}"
            - name: REACT_APP_CLOCKWORK_UI_HOMEPAGE
              value: "{{ .Values.mlp.ui.clockworkHomepage }}"
            - name: REACT_APP_FEAST_UI_HOMEPAGE
              value: "{{ .Values.mlp.ui.feastHomepage }}"
            - name: REACT_APP_KUBEFLOW_UI_HOMEPAGE
              value: "{{ .Values.mlp.ui.kubeflowHomepage }}"
            - name: REACT_APP_MERLIN_UI_HOMEPAGE
              value: "{{ .Values.mlp.ui.merlinHomepage }}"
            - name: REACT_APP_TURING_UI_HOMEPAGE
              value: "{{ .Values.mlp.ui.turingHomepage }}"
      volumes:
      - name: db-migrations
        configMap:
          name: {{ .Release.Name }}-db-migrations

{{- if .Values.mlp.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.mlp.imagePullSecrets | indent 6 }}
{{- end }}

{{- if .Values.mlp.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.mlp.nodeSelector | indent 8 }}
{{- end }}
